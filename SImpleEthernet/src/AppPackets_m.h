//
// Generated file, do not edit! Created by nedtool 5.7 from AppPackets.msg.
//

#ifndef __APPPACKETS_M_H
#define __APPPACKETS_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>AppPackets.msg:2</tt> by nedtool.
 * <pre>
 * packet AppPacket
 * {
 *     name = "AppPacket";
 *     simtime_t genTime;
 *     bool lastBurstPacket = false;
 *     int idx;
 *     int idBurst;
 *     bool video;
 * 
 *     //int priority;
 * }
 * </pre>
 */
class AppPacket : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::simtime_t genTime;
    bool lastBurstPacket;
    int idx;
    int idBurst;
    bool video;

  private:
    void copy(const AppPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppPacket&);

  public:
    AppPacket(const char *name=nullptr, short kind=0);
    AppPacket(const AppPacket& other);
    virtual ~AppPacket();
    AppPacket& operator=(const AppPacket& other);
    virtual AppPacket *dup() const override {return new AppPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual ::omnetpp::simtime_t getGenTime() const;
    virtual void setGenTime(::omnetpp::simtime_t genTime);
    virtual bool getLastBurstPacket() const;
    virtual void setLastBurstPacket(bool lastBurstPacket);
    virtual int getIdx() const;
    virtual void setIdx(int idx);
    virtual int getIdBurst() const;
    virtual void setIdBurst(int idBurst);
    virtual bool getVideo() const;
    virtual void setVideo(bool video);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppPacket& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>AppPackets.msg:13</tt> by nedtool.
 * <pre>
 * message AppControlInfo
 * {
 *     string dst;
 *     string src;
 *     simtime_t priority;
 * }
 * </pre>
 */
class AppControlInfo : public ::omnetpp::cMessage
{
  protected:
    ::omnetpp::opp_string dst;
    ::omnetpp::opp_string src;
    ::omnetpp::simtime_t priority;

  private:
    void copy(const AppControlInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppControlInfo&);

  public:
    AppControlInfo(const char *name=nullptr, short kind=0);
    AppControlInfo(const AppControlInfo& other);
    virtual ~AppControlInfo();
    AppControlInfo& operator=(const AppControlInfo& other);
    virtual AppControlInfo *dup() const override {return new AppControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getDst() const;
    virtual void setDst(const char * dst);
    virtual const char * getSrc() const;
    virtual void setSrc(const char * src);
    virtual ::omnetpp::simtime_t getPriority() const;
    virtual void setPriority(::omnetpp::simtime_t priority);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppControlInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef __APPPACKETS_M_H

